import streamlit as st
import streamlit.components.v1 as components
import io
import os
#ajout OS + if not os.path.exists
import pandas as pd
import matplotlib.pyplot as plt
import gdown

#import Explo_Viz , consid√©ration data cleaning & seeking

from utils import Explo_Viz
from utils import divers_processing
from utils import modelisation

# #########################
# ‚öôÔ∏è LOAD & PREPROCESS ‚öôÔ∏è #
##########################

@st.cache_data
def load_and_preprocess_data():
    """T√©l√©charge et pr√©traite les donn√©es depuis Google Drive."""
    file_id = "1aqr3QQCoeQcNp8vrnvgaDHKXzlTYbFGC"  # Ton ID de fichier extrait
    
    url = f"https://drive.google.com/uc?id={file_id}"  # Lien de t√©l√©chargement direct
    output = "eco2mix-regional_reduced.csv"
    gdown.download(url, output, quiet=False)

    if not os.path.exists(output):  # ‚ö†Ô∏è Evite redownload
        gdown.download(url, output, quiet=False)

    df_cons = pd.read_csv(output, sep=',', on_bad_lines="skip", encoding="utf-8",low_memory=False)  
    
    # Appliquer le pr√©traitement
    df_cons_preprocessed = Explo_Viz.preprocess_data(df_cons)
    df_energie = Explo_Viz.preprocess_data2(df_cons_preprocessed)
    df_temp = Explo_Viz.load_temp()  # Charger les donn√©es de temp√©rature
    return df_cons_preprocessed, df_energie, df_temp #ajout de df_energie

def main():
    #st.title("Pr√©diction de Consommation Electrique en France")
    st.sidebar.title("‚ö°‚ö° Pr√©diction Conso Electrique en France ‚ö°‚ö°")
    pages = ["üìñ Contexte et Datasets", "üìä Production VS Consommation", "üìâ Variabilit√© de la consommation", "‚úÇÔ∏è Pr√©traitements des donn√©es"," ü§ñ Mod√©lisation"]
    page = st.sidebar.radio("Aller vers", pages)
    #st.sidebar.title("Mod√©lisation")
    #st.sidebar.page_link("pages/modelisation.py", label="Processing et Mod√©lisation")
    st.sidebar.title("Simulateur")
    st.sidebar.page_link("pages/simulateur.py", label="üìà Pr√©dictions R√©gionales Futures")

    df_cons_preprocessed, df_energie, df_temp = load_and_preprocess_data() # AJOUTE



#################################
# ‚öôÔ∏è CONTEXTE ET DATASETS     ‚öôÔ∏è#
#################################
    if page == pages[0]: 
        st.title("Pr√©diction de Consommation Electrique en France")
        st.write("")
        st.header("Contexte")
        st.markdown(""" L‚Äôad√©quation entre la production et la consommation d‚Äô√©lectricit√© est au c≈ìur des pr√©occupations d‚Äôun acteur de l‚Äô√©nergie comme EDF. 
                 EDF, en tant que producteur et commercialisateur d‚Äô√©lectricit√© est en effet un responsable d‚Äô√©quilibre vis-√†-vis de RTE. 
                 Cela signifie qu‚Äôil se doit d‚Äôassurer √† tout instant un √©quilibre entre sa production et la consommation de ses clients, sous peine de p√©nalit√©s. 
                 Pour se faire, construire un mod√®le de pr√©vision de la consommation de ses clients est une activit√© essentielle au bon fonctionnement de EDF.""") 
        
        st.write('**Objectif** : Constater le phasage entre la consommation et la production √©nerg√©tique au niveau national et au niveau r√©gional. ' \
            'Analyse pour en d√©duire une pr√©vision de consommation (risque de black out notamment)')

        st.write("## Les jeux de donn√©es mis en oeuvre")
        data = [
        {"Objet": "Energie (Consolid√©)", "Description": "Production et consommation d‚Äô√©nergie par type de moyen de production et r√©gions ( 30 min)", "P√©riode couverte": "2013-2022", "Volum√©trie (lignes x colonnes)": "2.121.408 x 32", "Source": "ODRE, Open Data EDF"},
        {"Objet": "Energie (Temps R√©el)", "Description": "Production et consommation d‚Äô√©nergie par type de moyen de production et r√©gion (15 min, non consolid√©)", "P√©riode couverte": "2023-2024", "Volum√©trie (lignes x colonnes)": "796.000 x 32", "Source": "ODRE"},
        {"Objet": "Population", "Description": "√âvolutions et pr√©visions de la population fran√ßaise par r√©gion", "P√©riode couverte": "1990-2070", "Volum√©trie (lignes x colonnes)": "264.951 x 7", "Source": "INSEE"},
        {"Objet": "Temp√©rature", "Description": "√âvolution des temp√©ratures quotidiennes par r√©gion", "P√©riode couverte": "2016-2024", "Volum√©trie (lignes x colonnes)": "41.756 x 7", "Source": "M√©t√©o France"},
        {"Objet": "Temp√©rature", "Description": "Simulations 'DRIAS-2020' : donn√©es corrig√©es quotidiennes. Grille Safran", "P√©riode couverte": "2006-2100", "Volum√©trie (lignes x colonnes)": "83.987.046 x 8", "Source": "DRIAS"},
        ]

        st.markdown("""
                    <style>
                    .stTable td:nth-child(2),.stTable td:nth-child(4) {
                    white-space: nowrap;
                    }
                    </style>
                    """, unsafe_allow_html=True)
        st.table(data)

        st.markdown(""" Les √©changes avec le data scientist EDF ont confirm√© notre intuition d‚Äôexpliquer la variable cible **Consommation** 
                    par les variables explicatives **Temp√©rature**, **Dates** et **Population**.
                    Nous pourrons en effet √† travers la variable 'Date' √©tudier l‚Äôimpact des saisons, des p√©riodes de vacances scolaires et des week-ends notamment.
        """)
    
        st.write("### üîé Exploration 'Eco2Mix' - Notre dataset Principal")
        st.markdown("""
                    Ce jeu de donn√©es, rafra√Æchi une fois par jour, pr√©sente les donn√©es r√©gionales consolid√©es depuis janvier 2021 et d√©finitives (de janvier 2013 √† d√©cembre 2020) issues de l'application √©CO2mix. 
                    Elles sont √©labor√©es √† partir des comptages et compl√©t√©es par des forfaits. Les donn√©es sont dites consolid√©es lorsqu'elles ont √©t√© v√©rifi√©es et compl√©t√©es (livraison en milieu de M+1). 
                    Vous y trouverez au pas demi-heure:
                    - La consommation r√©alis√©e.
                    - La production selon les diff√©rentes fili√®res composant le mix √©nerg√©tique.
                    - La consommation des pompes dans les Stations de Transfert d'Energie par Pompage (STEP).
                    - Le solde des √©changes avec les r√©gions limitrophes.
                    """)
        st.markdown("Source : pour en savoir plus et t√©l√©charger ce dataset produit par RTE, cliquez [ICI](https://odre.opendatasoft.com/explore/dataset/eco2mix-regional-cons-def/information/?disjunctive.libelle_region&disjunctive.nature&sort=-date_heure&dataChart=eyJxdWVyaWVzIjpbeyJjaGFydHMiOlt7InR5cGUiOiJsaW5lIiwiZnVuYyI6IlNVTSIsInlBeGlzIjoiY29uc29tbWF0aW9uIiwiY29sb3IiOiJyYW5nZS1jdXN0b20iLCJzY2llbnRpZmljRGlzcGxheSI6dHJ1ZX1dLCJ4QXhpcyI6ImRhdGVfaGV1cmUiLCJtYXhwb2ludHMiOjIwMCwidGltZXNjYWxlIjoibWludXRlIiwic29ydCI6IiIsImNvbmZpZyI6eyJkYXRhc2V0IjoiZWNvMm1peC1yZWdpb25hbC1jb25zLWRlZiIsIm9wdGlvbnMiOnsiZGlzanVuY3RpdmUubGliZWxsZV9yZWdpb24iOnRydWUsImRpc2p1bmN0aXZlLm5hdHVyZSI6dHJ1ZSwic29ydCI6Ii1kYXRlX2hldXJlIn19LCJzZXJpZXNCcmVha2Rvd24iOiJsaWJlbGxlX3JlZ2lvbiJ9XSwidGltZXNjYWxlIjoiIiwiZGlzcGxheUxlZ2VuZCI6dHJ1ZSwiYWxpZ25Nb250aCI6dHJ1ZX0%3D)")
        st.write("---")
        st.write("Echantillon .sample(10) : ")
        st.dataframe(df_cons_preprocessed.sample(10))  # Utiliser le dataframe pr√©trait√©
        st.write("---")
        st.write("r√©sum√© statistique  .describe() : ")
        st.dataframe(df_cons_preprocessed.describe())
        st.write("---")
        st.write("Infos dataframe  .info() : ")
        # Capturer et afficher df_cons_preprocessed.info() directement avec st.text
        buffer = io.StringIO()
        df_cons_preprocessed.info(buf=buffer)
        s = buffer.getvalue()
        st.text(s)

       
####################################
# ‚öôÔ∏è DATAVIZ ADEQUATION PROD/CONSO    ‚öôÔ∏è#
####################################

    elif page == pages[1]:
        st.header("In√©galit√©s R√©gionales : Mix Energ√©tique et Capacit√©s de Production"
        )

        st.write ("""En plus de ne pas avoir le m√™me mix energ√©tique, les r√©gions sont dans une situation de disparit√© de leurs capacit√©s de production pour couvrir leurs besoins : """)

#Affichage des taux de couverture/r√©gions

        fig2 = Explo_Viz.create_barplot(df_cons_preprocessed)
        fig2.text(0.5, -0.15, "Certaines r√©gions sont largement d√©ficitaires en terme de phasage entre leur production et leurs besoin. Cf. Couverture 100%", ha='center', va='top', fontsize=12)
        st.pyplot(fig2)
        plt.close(fig2)
        st.write("");st.write("") 
        st.write("---")
#Affichage des besoins /r√©gions dans le temps    

        st.header("Phasages et Echanges Inter-r√©gionaux : Visualisation interactive ü§ì "
        )
        st.write("");st.write("") 

        st.write(""" Avec l'aide des op√©rateurs d'√©nergie, les r√©gions proc√®dent toute l'ann√©e √† des *√©changes*.
                Le graphique interactif ci-apr√®s permet de constater quelque soit la p√©riode et la maille temporelle choisie :
                la **variabilit√© des besoins** des R√©gions au fil du temps d'une part. Le phasage entre Consommation (Ligne en pointill√© noir) 
                 et Production au moyen des **√©changes inter-r√©gionaux** d'autre part.
                    """)
        st.write("") 

## ‚öôÔ∏è OUTIL DE FILTRAGE ####
        st.markdown('<div class="filtre-vert">', unsafe_allow_html=True)
        st.markdown("<hr style='border: 4px solid #4CAF50;'>", unsafe_allow_html=True)
        st.markdown('<h6 style="text-align: center; color: #4CAF50;">üîé Filtres d\'Analyse</h6>', unsafe_allow_html=True)
        
        col1, col2, col3 = st.columns(3)
        with col1:
            annee = st.selectbox("**Ann√©e** ('None' pour tout le dataset')", options=sorted(df_cons_preprocessed['DH'].dt.year.unique(), 
            reverse=True) + [None], index=sorted(df_cons_preprocessed['DH'].dt.year.unique(), reverse=True).index(2022)  # 2022 par d√©faut
            )
        with col2:
            if annee:
                mois = st.selectbox("**Mois** ('None' pour toute l'ann√©e)",
                options=sorted(df_cons_preprocessed[df_cons_preprocessed['DH'].dt.year == annee]['DH'].dt.month.unique()) + [None],index=0
                )
            else:
                mois = None
        with col3:
            frequence_resample = st.radio("**Fr√©quence** (√©chantillonnage)", options=['Heure', 'Jour', 'Semaine', 'Mois'],index=1  # 'Jour' par d√©faut
            )
#'Bretagne', 'Centre-Val de Loire', 
        regions_preselectionnees = ['Auvergne-Rh√¥ne-Alpes', "Provence-Alpes-C√¥te d'Azur"]
        regions = sorted(df_cons_preprocessed['R√©gion'].unique())

        regions_selected = st.multiselect("R√©gions √† comparer (2 maximum)", options=regions,default=regions_preselectionnees
        )
        st.markdown("<hr style='border: 4px solid #4CAF50;'>", unsafe_allow_html=True)

## ‚öôÔ∏è GRAPHIQUE INTERACTIF  ####       
        fig = Explo_Viz.create_regional_plots(df_cons_preprocessed, annee, mois, None, frequence_resample, regions_selected)
        st.pyplot(fig)
        plt.close(fig)

#################################
# ‚öôÔ∏è DATAVIZ CORRELATIONS  ‚öôÔ∏è#
#################################
    elif page == pages[2]:
        st.header("Saisonnalit√© et Consommation")
        
        st.write("""Ce graphique suivant montre l‚Äô√©volution mensuelle de la consommation d‚Äô√©nergie entre 2013 et 2023. Au-del√† du lien entre le mois de l'ann√©e et le niveeau de consommation, 
                 on observe une chute marqu√©e en 2020 (ligne grise), li√©e √† la crise du Covid-19 et ses confinements. 
        En 2022 (ligne cyan), la consommation reste globalement plus basse, traduisant l‚Äôeffet des tensions √©nerg√©tiques caus√©es par la guerre en Ukraine et les efforts de sobri√©t√©""")
        
        df_st2 = Explo_Viz.compute_df_st2(df_energie)
        fig_boxplot = Explo_Viz.create_annual_plot(df_st2)
        st.pyplot(fig_boxplot)
        plt.close(fig_boxplot)
        st.write("")

        st.write("### Temp√©rature et Consommation")
        st.write("""Le graphique ci-apr√®s combine des 'boxplots' de **consommation √©lectrique (MW)** et un 'scatter plot' de **temp√©rature moyenne (¬∞C)**,
                 le tout group√© par mois sur l‚Äôenti√®ret√© de la p√©riode √©tudi√©e. Il permet d'√©mettre l'hypoth√®se d'une influence significative de la temp√©rature sur la consommation √©lectrique au niveau mensuel, 
                 tout en visualisant la distribution et la variabilit√© de ces deux variables cl√©s au fil de l'ann√©e :"""
        )

        fig_boxplot,df_corr01 = Explo_Viz.create_boxplot(df_energie, df_temp)  # Appel de la fonction
        st.pyplot(fig_boxplot)  # Affichage du graphique dans Streamlit
        plt.close(fig_boxplot)  # Fermeture pour √©viter les conflits de rendu

        st.write(" - **Saisonnalit√© de la Consommation** : Les boxplots de consommation r√©v√®lent une forte saisonnalit√©. " \
        "La consommation est g√©n√©ralement plus √©lev√©e en hiver, avec des m√©dianes et des √©tendues interquartiles significativement plus hautes.")
        st.write("")
        st.write(" - **Corr√©lation Inverse Apparente** : En juxtaposant les deux types de donn√©es, on peut observer une corr√©lation inverse suggestive " \
        "entre la temp√©rature moyenne et la consommation √©lectrique.")

        #CORRELATION TEMPERATURE ET CONSO
        st.write("""Pour v√©rifier cette hypoth√®se de correlation, ci-apr√®s le r√©sultat d'un test statistique  """
        )
        st.write(" Les hypoth√®ses :")
        st.write(" H0 : Il n'y a pas d'influence de la temp√©rature sur la consommation")
        st.write("H1 : Il y a une influence significative de la temp√©rature sur la consommation")
        #####UPDATE####
        corr_results_temp, df_corr01 = Explo_Viz.Test_corr_temp(df_corr01)

        st.write("#### R√©sultats des tests de corr√©lation entre Temp√©rature moyenne et Consommation")
        st.write("**Les hypoth√®ses :**")
        st.write("- H0 : Il n'y a pas de lien entre la temp√©rature moyenne et la consommation")
        st.write("- H1 : Il existe une relation significative entre temp√©rature et consommation")

        st.write(f"- Corr√©lation de Spearman : {corr_results_temp['spearman_corr']:.3f} (p-value = {corr_results_temp['spearman_p']:.3e})")
        st.write(f"- Corr√©lation de Pearson : {corr_results_temp['pearson_corr']:.3f} (p-value = {corr_results_temp['pearson_p']:.3e})")

        if corr_results_temp['spearman_p'] < 0.05 or corr_results_temp['pearson_p'] < 0.05:
            st.write("‚û°Ô∏è Le lien entre **temp√©rature** et **consommation** est **significatif**, car la p-valeur est inf√©rieure √† 0.05.")
        else:
            st.write("‚ùó Aucune corr√©lation significative d√©tect√©e entre temp√©rature et consommation (p-valeur > 0.05).")

        st.write("üí° Note : La temp√©rature peut influencer la consommation √©nerg√©tique (chauffage ou climatisation), mais cette relation peut varier selon les r√©gions, saisons, ou plages horaires.")
        #####UPDATE####

        #CORRELATION PLAGE HORAIRE ET CONSO
        st.write("### Plage Horaire et Consommation")
        st.write("")
        st.write(""" La variabilit√© horaire est particuli√®rement marqu√©e en hiver, tandis qu‚Äôelle reste plus stable en √©t√©, comme l‚Äôindiquent les amplitudes des boxplots.
                 La forte structuration des courbes selon l‚Äôheure sugg√®re une corr√©lation claire entre consommation √©lectrique et rythme quotidien d‚Äôactivit√©."""
                 )

        fig_boxplot, df_st3 = Explo_Viz.create_boxplot_season(df_energie)  # Appel de la fonction
        st.pyplot(fig_boxplot)  # Affichage du graphique dans Streamlit
        plt.close(fig_boxplot)  # Fermeture pour √©viter les conflits de rendu

        corr_results, df_st3 = Explo_Viz.Test_corr(df_st3)

        st.write("#### R√©sultats des tests de corr√©lation entre Plage Horaire et Consommation")
        st.write(" Les hypoth√®ses :")
        st.write(" H0 : Il n'y a pas d'influence de la plage horaire sur la consommation")
        st.write("H1 : Il y a une influence significative de la plage horaire sur la consommation")
        
        st.write(f"- Corr√©lation de Spearman : {corr_results['spearman_corr']:.3f} (p-value = {corr_results['spearman_p']:.3e})")
        st.write(f"- Corr√©lation de Pearson : {corr_results['pearson_corr']:.3f} (p-value = {corr_results['pearson_p']:.3e})")
        st.write("le facteur ‚ÄúPlage_Horaire‚Äù a un effet significatif sur la consommation,\n car la p-valeur est inf√©rieure √† 0.05")
        st.write(""" Mais ces tests ne captent pas n√©cessairement toute la structure r√©elle du ph√©nom√®ne (comme la nature cyclique des heures)."""
                 )

#################################
# ‚öôÔ∏è     MODELISATIONS        ‚öôÔ∏è#
#################################

    elif page == pages[4]:
        st.title("Mod√©lisation")
        modelisation.intro()
        modelisation.lancement()

        
#################################
# ‚öôÔ∏è     DIVERS PROCESSING        ‚öôÔ∏è#
#################################

    elif page == pages[3]:
        st.title("Challenges Preprocessing ")
        divers_processing.cleaning()
        divers_processing.drias()
        

if __name__ == "__main__":
    main()